name: Deploy SOMB Website

on:
  push:
    branches: [main]
    paths:
      - "app/**"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build website
        run: bun run build --production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: GitHubActions-SOMB-Deploy

      - name: Deploy to S3
        run: |
          aws s3 sync app/.dist/prod/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html" \
            --exclude "*.xml" \
            --exclude "*.txt"

          # Set shorter cache for HTML files
          aws s3 sync app/.dist/prod/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --cache-control "public, max-age=0, must-revalidate" \
            --include "*.html" \
            --include "*.xml" \
            --include "*.txt"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment complete
        run: |
          echo "üöÄ Website deployed successfully!"
          echo "üåê URL: https://${{ secrets.DOMAIN_NAME }}"
